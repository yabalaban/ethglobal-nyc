// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ReportedAddress extends ethereum.Event {
  get params(): ReportedAddress__Params {
    return new ReportedAddress__Params(this);
  }
}

export class ReportedAddress__Params {
  _event: ReportedAddress;

  constructor(event: ReportedAddress) {
    this._event = event;
  }

  get reported(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reporter(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReportedDomain extends ethereum.Event {
  get params(): ReportedDomain__Params {
    return new ReportedDomain__Params(this);
  }
}

export class ReportedDomain__Params {
  _event: ReportedDomain;

  constructor(event: ReportedDomain) {
    this._event = event;
  }

  get domainHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get good(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get reporter(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get domain(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class Sqam extends ethereum.SmartContract {
  static bind(address: Address): Sqam {
    return new Sqam("Sqam", address);
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get trustredForwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ReportAddressCall extends ethereum.Call {
  get inputs(): ReportAddressCall__Inputs {
    return new ReportAddressCall__Inputs(this);
  }

  get outputs(): ReportAddressCall__Outputs {
    return new ReportAddressCall__Outputs(this);
  }
}

export class ReportAddressCall__Inputs {
  _call: ReportAddressCall;

  constructor(call: ReportAddressCall) {
    this._call = call;
  }

  get reported(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ReportAddressCall__Outputs {
  _call: ReportAddressCall;

  constructor(call: ReportAddressCall) {
    this._call = call;
  }
}

export class ReportDomainCall extends ethereum.Call {
  get inputs(): ReportDomainCall__Inputs {
    return new ReportDomainCall__Inputs(this);
  }

  get outputs(): ReportDomainCall__Outputs {
    return new ReportDomainCall__Outputs(this);
  }
}

export class ReportDomainCall__Inputs {
  _call: ReportDomainCall;

  constructor(call: ReportDomainCall) {
    this._call = call;
  }

  get domain(): string {
    return this._call.inputValues[0].value.toString();
  }

  get good(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ReportDomainCall__Outputs {
  _call: ReportDomainCall;

  constructor(call: ReportDomainCall) {
    this._call = call;
  }
}
